{
	"id": "bf791129b3509ff2c18d9f6147419b8f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Decode.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\ncontract Decode {\n\n  uint256 public value = 222674612520120847769739984565459710017;\n\n\n  constructor() public {}\n\n\n  function hash(uint256[] calldata values) public pure returns (string memory) {\n\n    string memory data = \"\";\n    for (uint i=0; i<values.length; i++) {\n        if (i>0){\n          data = stringConcat(data, \",\");\n        }\n        data = stringConcat(data, uint2str(values[i]));\n    }\n    return data;\n\n  }\n\n  \n   function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\n      if (_i == 0) {\n          return \"0\";\n      }\n      uint j = _i;\n      uint len;\n      while (j != 0) {\n          len++;\n          j /= 10;\n      }\n      bytes memory bstr = new bytes(len);\n      uint k = len - 1;\n      while (_i != 0) {\n          bstr[k--] = byte(uint8(48 + _i % 10));\n          _i /= 10;\n      }\n      return string(bstr);\n  }\n\n  function stringConcat(string memory a, string memory b) internal pure returns (string memory) {\n\n    return string(abi.encodePacked(a, b));\n\n  }\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Decode.sol": {
				"Decode": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "hash",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "value",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Decode.sol\":57:1069  contract Decode {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Decode.sol\":101:140  222674612520120847769739984565459710017 */\n  0xa78592067011a5fcb132a6afca437041\n    /* \"contracts/Decode.sol\":78:140  uint256 public value = 222674612520120847769739984565459710017 */\n  0x00\n  sstore\n    /* \"contracts/Decode.sol\":146:169  constructor() public {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Decode.sol\":57:1069  contract Decode {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Decode.sol\":57:1069  contract Decode {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3fa4f245\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x40ec6e49\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Decode.sol\":78:140  uint256 public value = 222674612520120847769739984565459710017 */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Decode.sol\":174:479  function hash(uint256[] calldata values) public pure returns (string memory) {... */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_12\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_13:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_15\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_13)\n    tag_15:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_16\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_16:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Decode.sol\":78:140  uint256 public value = 222674612520120847769739984565459710017 */\n    tag_6:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Decode.sol\":174:479  function hash(uint256[] calldata values) public pure returns (string memory) {... */\n    tag_12:\n        /* \"contracts/Decode.sol\":236:249  string memory */\n      0x60\n        /* \"contracts/Decode.sol\":258:276  string memory data */\n      0x00\n        /* \"contracts/Decode.sol\":258:281  string memory data = \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/Decode.sol\":292:298  uint i */\n      0x00\n        /* \"contracts/Decode.sol\":287:457  for (uint i=0; i<values.length; i++) {... */\n    tag_18:\n        /* \"contracts/Decode.sol\":304:310  values */\n      dup5\n      dup5\n        /* \"contracts/Decode.sol\":304:317  values.length */\n      swap1\n      pop\n        /* \"contracts/Decode.sol\":302:303  i */\n      dup2\n        /* \"contracts/Decode.sol\":302:317  i<values.length */\n      lt\n        /* \"contracts/Decode.sol\":287:457  for (uint i=0; i<values.length; i++) {... */\n      iszero\n      tag_19\n      jumpi\n        /* \"contracts/Decode.sol\":340:341  0 */\n      0x00\n        /* \"contracts/Decode.sol\":338:339  i */\n      dup2\n        /* \"contracts/Decode.sol\":338:341  i>0 */\n      gt\n        /* \"contracts/Decode.sol\":334:395  if (i>0){... */\n      iszero\n      tag_21\n      jumpi\n        /* \"contracts/Decode.sol\":361:384  stringConcat(data, \",\") */\n      tag_22\n        /* \"contracts/Decode.sol\":374:378  data */\n      dup3\n        /* \"contracts/Decode.sol\":361:384  stringConcat(data, \",\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x2c00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Decode.sol\":361:373  stringConcat */\n      tag_23\n        /* \"contracts/Decode.sol\":361:384  stringConcat(data, \",\") */\n      jump\t// in\n    tag_22:\n        /* \"contracts/Decode.sol\":354:384  data = stringConcat(data, \",\") */\n      swap2\n      pop\n        /* \"contracts/Decode.sol\":334:395  if (i>0){... */\n    tag_21:\n        /* \"contracts/Decode.sol\":411:450  stringConcat(data, uint2str(values[i])) */\n      tag_24\n        /* \"contracts/Decode.sol\":424:428  data */\n      dup3\n        /* \"contracts/Decode.sol\":430:449  uint2str(values[i]) */\n      tag_25\n        /* \"contracts/Decode.sol\":439:445  values */\n      dup8\n      dup8\n        /* \"contracts/Decode.sol\":446:447  i */\n      dup6\n        /* \"contracts/Decode.sol\":439:448  values[i] */\n      dup2\n      dup2\n      lt\n      tag_26\n      jumpi\n      invalid\n    tag_26:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Decode.sol\":430:438  uint2str */\n      tag_27\n        /* \"contracts/Decode.sol\":430:449  uint2str(values[i]) */\n      jump\t// in\n    tag_25:\n        /* \"contracts/Decode.sol\":411:423  stringConcat */\n      tag_23\n        /* \"contracts/Decode.sol\":411:450  stringConcat(data, uint2str(values[i])) */\n      jump\t// in\n    tag_24:\n        /* \"contracts/Decode.sol\":404:450  data = stringConcat(data, uint2str(values[i])) */\n      swap2\n      pop\n        /* \"contracts/Decode.sol\":319:322  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Decode.sol\":287:457  for (uint i=0; i<values.length; i++) {... */\n      jump(tag_18)\n    tag_19:\n      pop\n        /* \"contracts/Decode.sol\":469:473  data */\n      dup1\n        /* \"contracts/Decode.sol\":462:473  return data */\n      swap2\n      pop\n      pop\n        /* \"contracts/Decode.sol\":174:479  function hash(uint256[] calldata values) public pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Decode.sol\":922:1066  function stringConcat(string memory a, string memory b) internal pure returns (string memory) {... */\n    tag_23:\n        /* \"contracts/Decode.sol\":1001:1014  string memory */\n      0x60\n        /* \"contracts/Decode.sol\":1054:1055  a */\n      dup3\n        /* \"contracts/Decode.sol\":1057:1058  b */\n      dup3\n        /* \"contracts/Decode.sol\":1037:1059  abi.encodePacked(a, b) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_29:\n      0x20\n      dup4\n      lt\n      tag_31\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_29)\n    tag_31:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_32:\n      0x20\n      dup4\n      lt\n      tag_34\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_32)\n    tag_34:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/Decode.sol\":1023:1060  return string(abi.encodePacked(a, b)) */\n      swap1\n      pop\n        /* \"contracts/Decode.sol\":922:1066  function stringConcat(string memory a, string memory b) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Decode.sol\":487:918  function uint2str(uint _i) internal pure returns (string memory _uintAsString) {... */\n    tag_27:\n        /* \"contracts/Decode.sol\":537:564  string memory _uintAsString */\n      0x60\n        /* \"contracts/Decode.sol\":584:585  0 */\n      0x00\n        /* \"contracts/Decode.sol\":578:580  _i */\n      dup3\n        /* \"contracts/Decode.sol\":578:585  _i == 0 */\n      eq\n        /* \"contracts/Decode.sol\":574:618  if (_i == 0) {... */\n      iszero\n      tag_36\n      jumpi\n        /* \"contracts/Decode.sol\":599:609  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_35)\n        /* \"contracts/Decode.sol\":574:618  if (_i == 0) {... */\n    tag_36:\n        /* \"contracts/Decode.sol\":625:631  uint j */\n      0x00\n        /* \"contracts/Decode.sol\":634:636  _i */\n      dup3\n        /* \"contracts/Decode.sol\":625:636  uint j = _i */\n      swap1\n      pop\n        /* \"contracts/Decode.sol\":644:652  uint len */\n      0x00\n        /* \"contracts/Decode.sol\":660:720  while (j != 0) {... */\n    tag_37:\n        /* \"contracts/Decode.sol\":672:673  0 */\n      0x00\n        /* \"contracts/Decode.sol\":667:668  j */\n      dup3\n        /* \"contracts/Decode.sol\":667:673  j != 0 */\n      eq\n        /* \"contracts/Decode.sol\":660:720  while (j != 0) {... */\n      tag_38\n      jumpi\n        /* \"contracts/Decode.sol\":687:692  len++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Decode.sol\":709:711  10 */\n      0x0a\n        /* \"contracts/Decode.sol\":704:711  j /= 10 */\n      dup3\n      dup2\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      div\n      swap2\n      pop\n        /* \"contracts/Decode.sol\":660:720  while (j != 0) {... */\n      jump(tag_37)\n    tag_38:\n        /* \"contracts/Decode.sol\":727:744  bytes memory bstr */\n      0x00\n        /* \"contracts/Decode.sol\":757:760  len */\n      dup2\n        /* \"contracts/Decode.sol\":747:761  new bytes(len) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_41\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_41:\n      pop\n        /* \"contracts/Decode.sol\":727:761  bytes memory bstr = new bytes(len) */\n      swap1\n      pop\n        /* \"contracts/Decode.sol\":769:775  uint k */\n      0x00\n        /* \"contracts/Decode.sol\":784:785  1 */\n      0x01\n        /* \"contracts/Decode.sol\":778:781  len */\n      dup4\n        /* \"contracts/Decode.sol\":778:785  len - 1 */\n      sub\n        /* \"contracts/Decode.sol\":769:785  uint k = len - 1 */\n      swap1\n      pop\n        /* \"contracts/Decode.sol\":793:887  while (_i != 0) {... */\n    tag_42:\n        /* \"contracts/Decode.sol\":806:807  0 */\n      0x00\n        /* \"contracts/Decode.sol\":800:802  _i */\n      dup7\n        /* \"contracts/Decode.sol\":800:807  _i != 0 */\n      eq\n        /* \"contracts/Decode.sol\":793:887  while (_i != 0) {... */\n      tag_43\n      jumpi\n        /* \"contracts/Decode.sol\":854:856  10 */\n      0x0a\n        /* \"contracts/Decode.sol\":849:851  _i */\n      dup7\n        /* \"contracts/Decode.sol\":849:856  _i % 10 */\n      dup2\n      tag_44\n      jumpi\n      invalid\n    tag_44:\n      mod\n        /* \"contracts/Decode.sol\":844:846  48 */\n      0x30\n        /* \"contracts/Decode.sol\":844:856  48 + _i % 10 */\n      add\n        /* \"contracts/Decode.sol\":833:858  byte(uint8(48 + _i % 10)) */\n      0xf8\n      shl\n        /* \"contracts/Decode.sol\":821:825  bstr */\n      dup3\n        /* \"contracts/Decode.sol\":826:829  k-- */\n      dup3\n      dup1\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n        /* \"contracts/Decode.sol\":821:830  bstr[k--] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_45\n      jumpi\n      invalid\n    tag_45:\n      0x20\n      add\n      add\n        /* \"contracts/Decode.sol\":821:858  bstr[k--] = byte(uint8(48 + _i % 10)) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/Decode.sol\":876:878  10 */\n      0x0a\n        /* \"contracts/Decode.sol\":870:878  _i /= 10 */\n      dup7\n      dup2\n      tag_46\n      jumpi\n      invalid\n    tag_46:\n      div\n      swap6\n      pop\n        /* \"contracts/Decode.sol\":793:887  while (_i != 0) {... */\n      jump(tag_42)\n    tag_43:\n        /* \"contracts/Decode.sol\":908:912  bstr */\n      dup2\n        /* \"contracts/Decode.sol\":894:913  return string(bstr) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Decode.sol\":487:918  function uint2str(uint _i) internal pure returns (string memory _uintAsString) {... */\n    tag_35:\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d429bca32a6786597f78dc9708d98021576d69b0273246c0c4f7356db26097a364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526fa78592067011a5fcb132a6afca43704160005534801561002457600080fd5b50610440806100346000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633fa4f2451461003b57806340ec6e4914610059575b600080fd5b61004361014b565b6040518082815260200191505060405180910390f35b6100d06004803603602081101561006f57600080fd5b810190808035906020019064010000000081111561008c57600080fd5b82018360208201111561009e57600080fd5b803590602001918460208302840111640100000000831117156100c057600080fd5b9091929391929390505050610151565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101105780820151818401526020810190506100f5565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60005481565b6060600060405180602001604052806000815250905060005b848490508110156101f35760008111156101c0576101bd826040518060400160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152506101fe565b91505b6101e4826101df8787858181106101d357fe5b905060200201356102c6565b6101fe565b9150808060010191505061016a565b508091505092915050565b606082826040516020018083805190602001908083835b602083106102385780518252602082019150602081019050602083039250610215565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b602083106102895780518252602082019150602081019050602083039250610266565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052905092915050565b6060600082141561030e576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610405565b600082905060005b60008214610338578080600101915050600a828161033057fe5b049150610316565b60008167ffffffffffffffff8111801561035157600080fd5b506040519080825280601f01601f1916602001820160405280156103845781602001600182028036833780820191505090505b50905060006001830390505b600086146103fd57600a86816103a257fe5b0660300160f81b828280600190039350815181106103bc57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86816103f557fe5b049550610390565b819450505050505b91905056fea2646970667358221220d429bca32a6786597f78dc9708d98021576d69b0273246c0c4f7356db26097a364736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH16 0xA78592067011A5FCB132A6AFCA437041 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x440 DUP1 PUSH2 0x34 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x40EC6E49 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1C0 JUMPI PUSH2 0x1BD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2C00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x1E4 DUP3 PUSH2 0x1DF DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x1D3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x16A JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x238 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x215 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x289 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x266 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x405 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x338 JUMPI DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0xA DUP3 DUP2 PUSH2 0x330 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0x316 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x384 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST PUSH1 0x0 DUP7 EQ PUSH2 0x3FD JUMPI PUSH1 0xA DUP7 DUP2 PUSH2 0x3A2 JUMPI INVALID JUMPDEST MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP1 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x3BC JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP7 DUP2 PUSH2 0x3F5 JUMPI INVALID JUMPDEST DIV SWAP6 POP PUSH2 0x390 JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0x29 0xBC LOG3 0x2A PUSH8 0x86597F78DC9708D9 DUP1 0x21 JUMPI PUSH14 0x69B0273246C0C4F7356DB26097A3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "57:1012:0:-:0;;;101:39;78:62;;146:23;;;;;;;;;;57:1012;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80633fa4f2451461003b57806340ec6e4914610059575b600080fd5b61004361014b565b6040518082815260200191505060405180910390f35b6100d06004803603602081101561006f57600080fd5b810190808035906020019064010000000081111561008c57600080fd5b82018360208201111561009e57600080fd5b803590602001918460208302840111640100000000831117156100c057600080fd5b9091929391929390505050610151565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101105780820151818401526020810190506100f5565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60005481565b6060600060405180602001604052806000815250905060005b848490508110156101f35760008111156101c0576101bd826040518060400160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152506101fe565b91505b6101e4826101df8787858181106101d357fe5b905060200201356102c6565b6101fe565b9150808060010191505061016a565b508091505092915050565b606082826040516020018083805190602001908083835b602083106102385780518252602082019150602081019050602083039250610215565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b602083106102895780518252602082019150602081019050602083039250610266565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052905092915050565b6060600082141561030e576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610405565b600082905060005b60008214610338578080600101915050600a828161033057fe5b049150610316565b60008167ffffffffffffffff8111801561035157600080fd5b506040519080825280601f01601f1916602001820160405280156103845781602001600182028036833780820191505090505b50905060006001830390505b600086146103fd57600a86816103a257fe5b0660300160f81b828280600190039350815181106103bc57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86816103f557fe5b049550610390565b819450505050505b91905056fea2646970667358221220d429bca32a6786597f78dc9708d98021576d69b0273246c0c4f7356db26097a364736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x40EC6E49 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1C0 JUMPI PUSH2 0x1BD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2C00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x1E4 DUP3 PUSH2 0x1DF DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x1D3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x16A JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x238 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x215 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x289 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x266 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x405 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x338 JUMPI DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0xA DUP3 DUP2 PUSH2 0x330 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0x316 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x384 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST PUSH1 0x0 DUP7 EQ PUSH2 0x3FD JUMPI PUSH1 0xA DUP7 DUP2 PUSH2 0x3A2 JUMPI INVALID JUMPDEST MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP1 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x3BC JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP7 DUP2 PUSH2 0x3F5 JUMPI INVALID JUMPDEST DIV SWAP6 POP PUSH2 0x390 JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0x29 0xBC LOG3 0x2A PUSH8 0x86597F78DC9708D9 DUP1 0x21 JUMPI PUSH14 0x69B0273246C0C4F7356DB26097A3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "57:1012:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;78:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;174:305;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;78:62;;;;:::o;174:305::-;236:13;258:18;:23;;;;;;;;;;;;;;292:6;287:170;304:6;;:13;;302:1;:15;287:170;;;340:1;338;:3;334:61;;;361:23;374:4;361:23;;;;;;;;;;;;;;;;;:12;:23::i;:::-;354:30;;334:61;411:39;424:4;430:19;439:6;;446:1;439:9;;;;;;;;;;;;;430:8;:19::i;:::-;411:12;:39::i;:::-;404:46;;319:3;;;;;;;287:170;;;;469:4;462:11;;;174:305;;;;:::o;922:144::-;1001:13;1054:1;1057;1037:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:37;;922:144;;;;:::o;487:431::-;537:27;584:1;578:2;:7;574:44;;;599:10;;;;;;;;;;;;;;;;;;;;;574:44;625:6;634:2;625:11;;644:8;660:60;672:1;667;:6;660:60;;687:5;;;;;;;709:2;704:7;;;;;;;;;660:60;;;727:17;757:3;747:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:34;;769:6;784:1;778:3;:7;769:16;;793:94;806:1;800:2;:7;793:94;;854:2;849;:7;;;;;;844:2;:12;833:25;;821:4;826:3;;;;;;;821:9;;;;;;;;;;;:37;;;;;;;;;;;876:2;870:8;;;;;;;;;793:94;;;908:4;894:19;;;;;;487:431;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "217600",
								"executionCost": "20263",
								"totalCost": "237863"
							},
							"external": {
								"hash(uint256[])": "infinite",
								"value()": "983"
							},
							"internal": {
								"stringConcat(string memory,string memory)": "infinite",
								"uint2str(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1069,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1069,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1069,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 101,
									"end": 140,
									"name": "PUSH",
									"source": 0,
									"value": "A78592067011A5FCB132A6AFCA437041"
								},
								{
									"begin": 78,
									"end": 140,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 140,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 146,
									"end": 169,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 146,
									"end": 169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 146,
									"end": 169,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 146,
									"end": 169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 169,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 146,
									"end": 169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 146,
									"end": 169,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 146,
									"end": 169,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 169,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 146,
									"end": 169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1069,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1069,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1069,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1069,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1069,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1069,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1069,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d429bca32a6786597f78dc9708d98021576d69b0273246c0c4f7356db26097a364736f6c63430007060033",
									".code": [
										{
											"begin": 57,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "3FA4F245"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "40EC6E49"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1069,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 78,
											"end": 140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 78,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 78,
											"end": 140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 78,
											"end": 140,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 78,
											"end": 140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78,
											"end": 140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 78,
											"end": 140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 140,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 236,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 258,
											"end": 276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 258,
											"end": 281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 287,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 304,
											"end": 310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 304,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 302,
											"end": 303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 302,
											"end": 317,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 287,
											"end": 457,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 287,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 287,
											"end": 457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 338,
											"end": 341,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 334,
											"end": 395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 334,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 334,
											"end": 395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 361,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 374,
											"end": 378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 361,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 361,
											"end": 384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 361,
											"end": 384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 361,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 361,
											"end": 384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 361,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 361,
											"end": 384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 361,
											"end": 384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 361,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 361,
											"end": 384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 361,
											"end": 384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 361,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 361,
											"end": 384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 361,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "2C00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 361,
											"end": 384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 361,
											"end": 384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 361,
											"end": 384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 361,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 361,
											"end": 384,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 361,
											"end": 384,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 361,
											"end": 384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 334,
											"end": 395,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 334,
											"end": 395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 424,
											"end": 428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 430,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 439,
											"end": 445,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 439,
											"end": 445,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 446,
											"end": 447,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 439,
											"end": 448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 439,
											"end": 448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 439,
											"end": 448,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 439,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 439,
											"end": 448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 439,
											"end": 448,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 439,
											"end": 448,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 439,
											"end": 448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 439,
											"end": 448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 448,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 439,
											"end": 448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 439,
											"end": 448,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 430,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 430,
											"end": 449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 430,
											"end": 449,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 430,
											"end": 449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 411,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 404,
											"end": 450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 404,
											"end": 450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 319,
											"end": 322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 319,
											"end": 322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 287,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 287,
											"end": 457,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 287,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 287,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 287,
											"end": 457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 479,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 922,
											"end": 1066,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 922,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1054,
											"end": 1055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1066,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1066,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 918,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 487,
											"end": 918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 537,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 578,
											"end": 585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 574,
											"end": 618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 574,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 574,
											"end": 618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 599,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 574,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 574,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 625,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 625,
											"end": 636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 625,
											"end": 636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 720,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 660,
											"end": 720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 672,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 667,
											"end": 673,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 660,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 660,
											"end": 720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 687,
											"end": 692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 692,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 704,
											"end": 711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 704,
											"end": 711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 704,
											"end": 711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 704,
											"end": 711,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 704,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 704,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 704,
											"end": 711,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 704,
											"end": 711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 660,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 660,
											"end": 720,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 660,
											"end": 720,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 660,
											"end": 720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 727,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 747,
											"end": 761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 747,
											"end": 761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 747,
											"end": 761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 747,
											"end": 761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 747,
											"end": 761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 747,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 747,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 727,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 769,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 785,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 778,
											"end": 781,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 778,
											"end": 785,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 769,
											"end": 785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 769,
											"end": 785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 887,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 793,
											"end": 887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 806,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 802,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 800,
											"end": 807,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 793,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 793,
											"end": 887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 854,
											"end": 856,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 849,
											"end": 851,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 849,
											"end": 856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 849,
											"end": 856,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 849,
											"end": 856,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 849,
											"end": 856,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 849,
											"end": 856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 856,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 844,
											"end": 846,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 844,
											"end": 856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 833,
											"end": 858,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 833,
											"end": 858,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 821,
											"end": 825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 826,
											"end": 829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 826,
											"end": 829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 826,
											"end": 829,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 826,
											"end": 829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 826,
											"end": 829,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 826,
											"end": 829,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 826,
											"end": 829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 821,
											"end": 830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 821,
											"end": 830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 821,
											"end": 830,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 821,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 821,
											"end": 830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 821,
											"end": 830,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 821,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 821,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 821,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 821,
											"end": 830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 821,
											"end": 858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 821,
											"end": 858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 858,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 821,
											"end": 858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 821,
											"end": 858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 821,
											"end": 858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 821,
											"end": 858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 858,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 821,
											"end": 858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 821,
											"end": 858,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 821,
											"end": 858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 870,
											"end": 878,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 870,
											"end": 878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 870,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 870,
											"end": 878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 870,
											"end": 878,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 870,
											"end": 878,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 870,
											"end": 878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 870,
											"end": 878,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 870,
											"end": 878,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 870,
											"end": 878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 793,
											"end": 887,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 887,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 793,
											"end": 887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 908,
											"end": 912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 894,
											"end": 913,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 894,
											"end": 913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 918,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 487,
											"end": 918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 487,
											"end": 918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 918,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"hash(uint256[])": "40ec6e49",
							"value()": "3fa4f245"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"hash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Decode.sol\":\"Decode\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Decode.sol\":{\"keccak256\":\"0x6113964264dbdef06a79f764dcd845d45ef14a56f5e0d2706e12e8cc87c2e1d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05923a49ba07fb53f1ac0264659ec6282161956092e7da31c87bfb5cee98e75c\",\"dweb:/ipfs/QmSB6DvP1Wq3VmAQPg2J8eCq6eiWkFvNdd8xebe4cQxFmf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/Decode.sol:Decode",
								"label": "value",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "contracts/Decode.sol:9:3: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  constructor() public {}\n  ^---------------------^\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 169,
					"file": "contracts/Decode.sol",
					"start": 146
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Decode.sol": {
				"ast": {
					"absolutePath": "contracts/Decode.sol",
					"exportedSymbols": {
						"Decode": [
							157
						]
					},
					"id": 158,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "Decode",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3fa4f245",
									"id": 4,
									"mutability": "mutable",
									"name": "value",
									"nodeType": "VariableDeclaration",
									"scope": 157,
									"src": "78:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "78:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323232363734363132353230313230383437373639373339393834353635343539373130303137",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "101:39:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_222674612520120847769739984565459710017_by_1",
											"typeString": "int_const 2226...(31 digits omitted)...0017"
										},
										"value": "222674612520120847769739984565459710017"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 7,
										"nodeType": "Block",
										"src": "167:2:0",
										"statements": []
									},
									"id": 8,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "157:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:0:0"
									},
									"scope": 157,
									"src": "146:23:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "251:228:0",
										"statements": [
											{
												"assignments": [
													17
												],
												"declarations": [
													{
														"constant": false,
														"id": 17,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 58,
														"src": "258:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 16,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "258:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"hexValue": "",
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "279:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "258:23:0"
											},
											{
												"body": {
													"id": 54,
													"nodeType": "Block",
													"src": "324:133:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 31,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "338:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 32,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "340:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "338:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 42,
															"nodeType": "IfStatement",
															"src": "334:61:0",
															"trueBody": {
																"id": 41,
																"nodeType": "Block",
																"src": "342:53:0",
																"statements": [
																	{
																		"expression": {
																			"id": 39,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 34,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 17,
																				"src": "354:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 36,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 17,
																						"src": "374:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "2c",
																						"id": 37,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "380:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
																							"typeString": "literal_string \",\""
																						},
																						"value": ","
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
																							"typeString": "literal_string \",\""
																						}
																					],
																					"id": 35,
																					"name": "stringConcat",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 156,
																					"src": "361:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																						"typeString": "function (string memory,string memory) pure returns (string memory)"
																					}
																				},
																				"id": 38,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "361:23:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"src": "354:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"id": 40,
																		"nodeType": "ExpressionStatement",
																		"src": "354:30:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 43,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "404:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 45,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 17,
																			"src": "424:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 47,
																						"name": "values",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "439:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																							"typeString": "uint256[] calldata"
																						}
																					},
																					"id": 49,
																					"indexExpression": {
																						"id": 48,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 21,
																						"src": "446:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "439:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 46,
																				"name": "uint2str",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "430:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 50,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "430:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			},
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 44,
																		"name": "stringConcat",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 156,
																		"src": "411:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (string memory,string memory) pure returns (string memory)"
																		}
																	},
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "411:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "404:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 53,
															"nodeType": "ExpressionStatement",
															"src": "404:46:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 24,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "302:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 25,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "304:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "304:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "302:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 55,
												"initializationExpression": {
													"assignments": [
														21
													],
													"declarations": [
														{
															"constant": false,
															"id": 21,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 55,
															"src": "292:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 20,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "292:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 23,
													"initialValue": {
														"hexValue": "30",
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "299:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "292:8:0"
												},
												"loopExpression": {
													"expression": {
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "319:3:0",
														"subExpression": {
															"id": 28,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "319:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 30,
													"nodeType": "ExpressionStatement",
													"src": "319:3:0"
												},
												"nodeType": "ForStatement",
												"src": "287:170:0"
											},
											{
												"expression": {
													"id": 56,
													"name": "data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 17,
													"src": "469:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 15,
												"id": 57,
												"nodeType": "Return",
												"src": "462:11:0"
											}
										]
									},
									"functionSelector": "40ec6e49",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "values",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "188:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 9,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "188:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 10,
													"nodeType": "ArrayTypeName",
													"src": "188:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "187:27:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "236:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "236:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "235:15:0"
									},
									"scope": 157,
									"src": "174:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "566:352:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 66,
														"name": "_i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "578:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "584:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 72,
												"nodeType": "IfStatement",
												"src": "574:44:0",
												"trueBody": {
													"id": 71,
													"nodeType": "Block",
													"src": "587:31:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "606:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 65,
															"id": 70,
															"nodeType": "Return",
															"src": "599:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													74
												],
												"declarations": [
													{
														"constant": false,
														"id": 74,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"scope": 136,
														"src": "625:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 73,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "625:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 76,
												"initialValue": {
													"id": 75,
													"name": "_i",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 61,
													"src": "634:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "625:11:0"
											},
											{
												"assignments": [
													78
												],
												"declarations": [
													{
														"constant": false,
														"id": 78,
														"mutability": "mutable",
														"name": "len",
														"nodeType": "VariableDeclaration",
														"scope": 136,
														"src": "644:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 77,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "644:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 79,
												"nodeType": "VariableDeclarationStatement",
												"src": "644:8:0"
											},
											{
												"body": {
													"id": 90,
													"nodeType": "Block",
													"src": "675:45:0",
													"statements": [
														{
															"expression": {
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "687:5:0",
																"subExpression": {
																	"id": 83,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "687:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 85,
															"nodeType": "ExpressionStatement",
															"src": "687:5:0"
														},
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 86,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "704:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "709:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "704:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "704:7:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 80,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "667:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "672:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "667:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "WhileStatement",
												"src": "660:60:0"
											},
											{
												"assignments": [
													93
												],
												"declarations": [
													{
														"constant": false,
														"id": 93,
														"mutability": "mutable",
														"name": "bstr",
														"nodeType": "VariableDeclaration",
														"scope": 136,
														"src": "727:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 92,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "727:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 98,
												"initialValue": {
													"arguments": [
														{
															"id": 96,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "757:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "747:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 94,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "751:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "747:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "727:34:0"
											},
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"mutability": "mutable",
														"name": "k",
														"nodeType": "VariableDeclaration",
														"scope": 136,
														"src": "769:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 99,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "769:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 104,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 101,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "778:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "784:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "769:16:0"
											},
											{
												"body": {
													"id": 129,
													"nodeType": "Block",
													"src": "809:78:0",
													"statements": [
														{
															"expression": {
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 108,
																		"name": "bstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 93,
																		"src": "821:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 111,
																	"indexExpression": {
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "826:3:0",
																		"subExpression": {
																			"id": 109,
																			"name": "k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 100,
																			"src": "826:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "821:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "844:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 117,
																							"name": "_i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 61,
																							"src": "849:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"hexValue": "3130",
																							"id": 118,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "854:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"src": "849:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "844:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "838:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 114,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "838:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "838:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "833:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 112,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "833:4:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "833:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "821:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 124,
															"nodeType": "ExpressionStatement",
															"src": "821:37:0"
														},
														{
															"expression": {
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 125,
																	"name": "_i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "870:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "876:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "870:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 128,
															"nodeType": "ExpressionStatement",
															"src": "870:8:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 105,
														"name": "_i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "800:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "806:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "800:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 130,
												"nodeType": "WhileStatement",
												"src": "793:94:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 133,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "901:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 131,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "901:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "901:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 65,
												"id": 135,
												"nodeType": "Return",
												"src": "894:19:0"
											}
										]
									},
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uint2str",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "_i",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "505:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "505:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:9:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "_uintAsString",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "537:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 63,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:29:0"
									},
									"scope": 157,
									"src": "487:431:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "1016:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 150,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 139,
																	"src": "1054:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 151,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "1057:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 148,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1037:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1037:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1037:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1030:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 146,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1030:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1030:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 145,
												"id": 154,
												"nodeType": "Return",
												"src": "1023:37:0"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stringConcat",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "944:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 138,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "944:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "961:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 140,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "961:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:34:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "1001:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 143,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1001:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1000:15:0"
									},
									"scope": 157,
									"src": "922:144:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 158,
							"src": "57:1012:0"
						}
					],
					"src": "32:1038:0"
				},
				"id": 0
			}
		}
	}
}