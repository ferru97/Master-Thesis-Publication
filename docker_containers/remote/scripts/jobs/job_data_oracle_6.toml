
type = "directrequest"
schemaVersion = 1
name = "Data Fetcher"
externalJobID = "142ff888-5ecb-4152-a449-69de0b419e9e"
minContractPaymentLinkJuels = "100000000000000000" 
contractAddress = "0x9044E748A453912fEBFb07B024378D45734c3f7a"
maxTaskDuration = "30s"
observationSource = """

    // First, we parse the request log and the CBOR payload inside of it
    decode_log   [type="ethabidecodelog" 
                            data="$(jobRun.logData)"
                            topics="$(jobRun.logTopics)"
                            abi="OracleRequest(bytes32 indexed specId,address requester,bytes32 requestId,uint256 payment,address callbackAddr,bytes4 callbackFunctionId,uint256 cancelExpiration,uint256 dataVersion,bytes data)"]

    decode_cbor  [type="cborparse" data="$(decode_log.data)"] 

    fun_calls    [type=http method=POST url="http://10.5.0.6:3000/getSavedData" requestData="{ \\"hash\\": $(decode_cbor.hash), \\"rid\\": $(decode_cbor.rid), \\"oid\\": \\"0x6BDfa71d13d860701aE14f0d6a0BDc533ba61010\\"}" allowUnrestrictedNetworkAccess=true]

    fun_calls_json [type="jsonparse"
                    data="$(fun_calls)"
                    path="functionCalls"]

    past_value_json [type="jsonparse"
                    data="$(fun_calls)"
                    path="pastValue"]
    
    encode_mwr [type="ethabiencode"
                abi="(bytes32 requestID, uint256[] calldata functionCalls, string calldata pastValue, address sender, uint64 queueID)"
                data="{\\"requestID\\": $(decode_log.requestId), \\"functionCalls\\": $(fun_calls_json), \\"pastValue\\": $(past_value_json), \\"sender\\": \\"0x6BDfa71d13d860701aE14f0d6a0BDc533ba61010\\", \\"queueID\\": $(decode_cbor.rid)}"]

    encode_tx    [type="ethabiencode"
                 abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                 data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_mwr)}" ]

  submit_tx  [type="ethtx" to="0x9044E748A453912fEBFb07B024378D45734c3f7a" data="$(encode_tx)"]
  decode_log -> decode_cbor -> fun_calls -> fun_calls_json -> past_value_json -> encode_mwr -> encode_tx -> submit_tx
"""
